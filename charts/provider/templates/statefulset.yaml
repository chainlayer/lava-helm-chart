{{- if .Values.persistence.enabled }}
{{- with .Values.persistence }}
{{- $validation := required "[VALITATION] Missing required value for persistence: 'size'" .size }}
{{- end }}
{{- with .Values.config }}
{{- $validation := required "[VALITATION] Missing one or more required values: 'endpoint', 'supportedChainIds', 'rpcNodeUrl', 'secretName, 'secretKey', 'passwordSecretName', passwordSecretKey" (and .endpoint .supportedChainIds .rpcNodeUrl .key.secretName .key.secretKey .key.passwordSecretName .key.passwordSecretKey) }}
{{- end }}
{{- with .Values.provider }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.fullname" $ }}
  namespace: {{ include "common.namespace" $ }}
  labels: {{- include "common.labels" $ | nindent 4 }}
    {{- with .providerLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .providerAnnotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "common.fullname" $ }}
  {{- if not .autoscaling.hpa.enabled }}
  replicas: {{ .replicaCount }}
  {{- end }}
  {{- with .podManagementPolicy }}
  podManagementPolicy: {{ . }}
  {{- end }}
  {{- with .updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.matchLabels" $ | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels" $ | nindent 8 }}
        {{- with .podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.serviceAccount }}{{- if .enabled }}
      serviceAccountName: {{ default ( include "common.fullname" $ ) .nameOverride }}
      automountServiceAccountToken: {{ .automountServiceAccountToken }}
      {{- end }}{{- end }}
      {{- if .podSecurityContext.enabled }}
      securityContext:
        {{- omit .podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .schedulerName }}
      schedulerName: {{ . }}
      {{- end }}
      {{- with .topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: import-key
          {{- if .containerSecurityContext.enabled }}
          securityContext:
            {{- omit .containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: {{ include "deployment.image" $ }}
          {{- with .image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          {{- with $.Values.config }}
          command:
           - sh
           - -c
           - |
            #!/bin/sh
            # exit when any command fails
            set -e

            # Check if the key is already imported by attempting to show it
            if lavap keys show {{ default .moniker .key.name }} --keyring-backend "test" --home {{ $.Values.persistence.mountPath }} --keyring-dir {{ $.Values.persistence.mountPath }} >/dev/null 2>&1; then
              echo "Key has already been imported, exiting..."
              exit 0
            fi

            # Import key into keyring
            echo $KEY_PASSWORD | lavap keys \
              import {{ default .moniker .key.name }} /tmp/keyfile/{{ .key.secretKey }} \
              --keyring-backend "test" \
              --home {{ $.Values.persistence.mountPath }} \
              --keyring-dir {{ $.Values.persistence.mountPath }}

            echo "Key imported successfully."
          volumeMounts:
            - name: data-volume
              mountPath: {{ $.Values.persistence.mountPath }}
            - name: private-key-volume
              mountPath: /tmp/keyfile/{{ .key.secretKey }}
              subPath: {{ .key.secretKey }}
              readOnly: true
          env:
            - name: KEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .key.passwordSecretName }}
                  key: {{ .key.passwordSecretKey }}
        {{- end }}
        {{- with .initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: "provider"
          {{- if .containerSecurityContext.enabled }}
          securityContext:
            {{- omit .containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: {{ include "deployment.image" $ }}
          {{- with .image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          {{- with $.Values.config }}{{- if not .lavavisor }}
          command: ["lavap"]
          args:
            - "rpcprovider"
            - "{{ include "provider-config.path" $ }}"
            - "--from"
            - "{{ default .moniker .key.name }}"
            - "--home"
            - "/data"
            - "--keyring-backend"
            - "test"
            - "--keyring-dir"
            - "/data"
            - "--geolocation"
            - "{{ .geolocation }}"
            - "--node"
            - "{{ .rpcNodeUrl }}"
            - "--chain-id"
            - "{{ .chainId }}"
            - "--log_level"
            - "{{ .logLevel }}"
            {{- with $.Values.metrics }}{{- if .enabled }}
            - "--metrics-listen-address"
            - "0.0.0.0:{{ .port.number }}"
            {{- end }}{{- end }}
            {{- with .cache }}{{- if .enabled }}
            "--cache-be", "{{ .endpoint }}"
            {{- end }}{{- end }}
            {{- with .flags }}
            {{- range $key, $value := . }}
            - "--{{ $key }}"
            - "{{ $value }}"
            {{- end }}
            {{- end }}
          {{- else }}
          command: ["lavavisor"]
          args:
            - "pod"
            - "--cmd"
            - "lavap"
            - "rpcprovider"
            - "{{ include "provider-config.path" $ }}"
            - "--from"
            - "{{ default .moniker .key.name }}"
            - "--home"
            - "{{ $.Values.persistence.mountPath }}"
            - "--keyring-backend"
            - "test"
            - "--keyring-dir"
            - "{{ $.Values.persistence.mountPath }}"
            - "--geolocation"
            - "{{ .geolocation }}"
            - "--node"
            - "{{ .rpcNodeUrl }}"
            - "--chain-id"
            - "{{ .chainId }}"
            - "--log_level"
            - "{{ .logLevel }}"
            {{- with $.Values.metrics }}{{- if .enabled }}
            - "--metrics-listen-address"
            - "0.0.0.0:{{ .port.number }}"
            {{- end }}{{- end }}
            {{- with .cache }}{{- if .enabled }}
            "--cache-be", "{{ .endpoint }}"
            {{- end }}{{- end }}
            {{- with .flags }}
            {{- range $key, $value := . }}
            - "--{{ $key }}"
            - "{{ $value }}"
            {{- end }}
            {{- end }}
          {{- end }}{{- end }}
          {{- with $.Values.config.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.config.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ .containerPort.name }}
              containerPort: {{ .containerPort.number }}
              protocol: TCP
            {{- with $.Values.metrics }}{{- if .enabled }}
            - name: {{ .port.name }}
              containerPort: {{ .port.number }}
              protocol: TCP
            {{- end }}{{- end }}
          {{- if and (not .customLivenessProbe.enabled) (.livenessProbe.enabled) }}
          {{- $metricsPort := required "Metrics port name is required for livenessProbe." $.Values.metrics.port.name }}
          livenessProbe:
            httpGet:
              path: /metrics/overall-health
              port: {{ $metricsPort }}
            {{- omit .livenessProbe "enabled" | toYaml | nindent 12 }}
          {{ else if .customLivenessProbe.enabled }}
          livenessProbe:
            {{- toYaml .customLivenessProbe | nindent 12 }}
          {{- end -}}
          {{ if and (not .customReadinessProbe) (.readinessProbe.enabled) -}}
          readinessProbe:
            exec:
              {{- with $.Values.config }}
              command:
                - "lavap"
                - "test"
                - "rpcprovider"
                - "--from"
                - "{{ default .moniker .key.name }}"
                - "--home"
                - "{{ $.Values.persistence.mountPath }}"
                - "--keyring-backend"
                - "test"
                - "--keyring-dir"
                - "{{ $.Values.persistence.mountPath }}"
                - "--node"
                - "{{ .rpcNodeUrl }}"
                - "--endpoints"
                - {{ range .supportedChainIds }}"{{ $.Values.config.endpoint }}:443,{{ . }} "{{ end }}
              {{- end }}
            {{- omit .readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- else if .customReadinessProbe }}
          readinessProbe:
            {{- toYaml .customReadinessProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data-volume
              mountPath: {{ $.Values.persistence.mountPath }}
            - name: config-volume
              mountPath: {{ $.Values.persistence.mountPath }}/{{ include "provider-config.path" $ }}
              subPath: {{ include "provider-config.path" $ }}
              readOnly: true
        {{- with .sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ default (printf "%s-config" (include "common.fullname" $ )) $.Values.config.existingConfigMap.name }}
            items:
              - key: {{ default "config.yaml" $.Values.config.existingConfigMap.key }}
                path: {{ include "provider-config.path" $ }}
        - name: private-key-volume
          secret:
            secretName: {{ $.Values.config.key.secretName }}
            optional: false
  {{- with $.Values.persistence }}{{- if not .existingClaim }}
  volumeClaimTemplates:
    - metadata:
        name: data-volume
        namespace: {{ include "common.namespace" $ }}
        {{- with .annotations }}
        annotations: {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .labels }}
        labels: {{- toYaml . | nindent 8 }}
        {{- end }}
      spec:
        {{- with .dataSource }}
        dataSource: {{ . }}
        {{- end }}
        accessModes:
        {{- range .accessModes }}
        - {{ . }}
        {{- end }}
        resources:
          requests:
            storage: {{ .size }}
        {{- with .selector }}
        selector:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .storageClass }}
        storageClassName: {{ . }}
        {{- end }}
  {{- end }}{{- end }}
{{- end }}
{{- end }}
